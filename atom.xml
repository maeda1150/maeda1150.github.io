<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[NO TECHNOLOGY, NO LIFE.]]></title>
  <link href="http://http://blog.no-technology-no-life.com/atom.xml" rel="self"/>
  <link href="http://http://blog.no-technology-no-life.com/"/>
  <updated>2016-04-10T12:40:10+00:00</updated>
  <id>http://http://blog.no-technology-no-life.com/</id>
  <author>
    <name><![CDATA[masaki maeda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TED動画をダウンロードして日本語・英語の字幕を付けるスクリプトを作った]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2015/11/02/translated-ted/"/>
    <updated>2015-11-02T12:10:45+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2015/11/02/translated-ted</id>
    <content type="html"><![CDATA[<p>気が付いたらもう11月。<br/>
<a href="http://maeda1150.github.io/blog/2015/01/01/decide-the-goal/">目標の達成</a>は厳しいなぁ。。</p>

<p>英語の勉強の為にTEDを見ていたのですが、日本語と英語の字幕が同時に表示されているといいな、とふと思い、<strong>動画をダウンロードして英語・日本語の字幕をくっつけるscript</strong>を書いてみた。<br/>
<a href="https://github.com/maeda1150/download_translated_TED">download_translated_TED</a></p>

<!--more-->


<p>こちらのサイトを参考にさせて頂いた。<br/>
<a href="http://avaveo.blogspot.jp/2010/06/ted.html">日本語字幕付きのTED動画をつくる</a></p>

<p>ちょっと動かない箇所などや、字幕の調整をした。<br/>
使い方はgithubのページを見ていただいたら分かるかと思います。</p>

<p>ところで、<strong>mplayer</strong>という動画や音楽の再生や加工が出来るソフトがインストールされていることを今回のことで知った。<br/>
macならデフォルトで<strong>mplayer</strong>が入っているのだろうか？<br/>
自分の環境では多分元から入っていたと思うのだが定かではない。</p>

<p><strong>mplayer</strong>は非常に便利。<br/>
<strong>QuickTimeplayer</strong>はプレイリストが作れないみたいだし、<strong>iTunese</strong>は重いし、プレイリストを作るのも面倒くさい。</p>

<p>下記のようなスクリプトをどこかにメモっておいて、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>while [ true ]
</span><span class='line'>do
</span><span class='line'>  for file in "./*"
</span><span class='line'>  do
</span><span class='line'>    mplayer ${file}
</span><span class='line'>  done
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>


<p><code>vim</code>で開いてYankして、自分が作ったプレイリストのディレクトリに行き、ペーストするだけ。<br/>
プレイリストを変えたい時はディレクトリ内の音楽を入れ替えるだけだし、もう音楽を聞く為に<strong>QuickTimeplayer</strong>や<strong>iTunese</strong>を開くことは無いだろう。</p>

<p>良かった良かった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[werckerからGitHub Pagesにデプロイ]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2015/01/25/wercker-to-githubpages/"/>
    <updated>2015-01-25T08:22:50+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2015/01/25/wercker-to-githubpages</id>
    <content type="html"><![CDATA[<p>今日は<a href="https://www.youtube.com/watch?v=FGBhQbmPwH8">Daft Punk - One More Time</a>をリピートで聞きながら。<br/>
ノリノリになれます(笑)。<br/>
少し前は妖怪ウォッチのテーマ曲<a href="https://itunes.apple.com/jp/music-video/chu-lian-gudegeragerapo/id929941161">初恋峠でゲラゲラポー</a>にハマって１日中聞いたりしていた(笑)。</p>

<p>それはどうでもいいのですが、下記のブログを見て<a href="http://wercker.com/#">wercker</a>で自動デプロイをやってみたくなったので、やってみた。<br/>
- <a href="http://b.fly1tkg.com/2014/06/wordpress-to-octopress/">WordpressからGitHub pages+Octopressに移行した</a></p>

<!--more-->


<p>なぜ<a href="http://wercker.com/#">wercker</a>かというと、「無料」で出来るからです。<br/>
<a href="http://matome.naver.jp/odai/2136404482138475501">大阪のおばちゃん</a>のように「無料(タダ)」という言葉に弱いからです(笑)。<br/>
※すみません、大阪のおばちゃんが全員そうではないと思っておりますm(_ _)m</p>

<p>上記の記事の中で紹介されている「werckerを使ってDeployの自動化」でほとんど大丈夫だったのですが、少しエラーが出たのでその対応処理だけ。</p>

<h3>No submodule mapping found in .gitmodules for path &lsquo;.themes/foxslide&rsquo;</h3>

<p>themeは<a href="https://github.com/sevenadrian/foxslide">foxslide</a>を使っていますが、このディレクトリがあることによって怒られたのでとりあえず削除。</p>

<h3>rvm-useでUnknown ruby string (do not know how to handle): ruby-2.1.1p76</h3>

<p>macの<code>ruby -v</code>が<code>ruby 2.1.1p76</code>だったので、wercker.ymlに、</p>

<figure class='code'><figcaption><span>wercker.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">rvm-use</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby-2.1.1p76</span>
</span></code></pre></td></tr></table></div></figure>


<p>と書いた。<br/>
しかし、無いです、と怒られた。</p>

<p>werckerデベロッパーコンソールのBoxesの中のBOX-RVMを見てみる。<br/>
<a href="https://github.com/wercker/box-rvm">box-rvm</a>はいくつかバージョンがあるので、下記のように指定してあげると通る。</p>

<figure class='code'><figcaption><span>wercker.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wercker/rvm@2.1.0</span>
</span><span class='line'><span class="l-Scalar-Plain">build</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">steps</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">rvm-use</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby-2.1.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、<code>ruby-2.1.1</code>はdeprecatedなので、もういっそのこと最新(2015.1.25現在)のboxからdeprecatedでない<code>ruby-2.1.5</code>でいってみる。<br/>
最終的にこんな感じ。</p>

<figure class='code'><figcaption><span>wercker.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wercker/rvm@2.4.0</span>
</span><span class='line'><span class="l-Scalar-Plain">build</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">steps</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">rvm-use</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby-2.1.5</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Deployタスクが上手くいかなかったのでbuildタスクでデプロイした</h3>

<p>Deployタスクで上手くいかなかったので、とりあえずbuildタスクにデプロイ処理を入れ込んだ。<br/>
最終的なwercker.ymlはこう。</p>

<figure class='code'><figcaption><span>wercker.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wercker/rvm@2.4.0</span>
</span><span class='line'><span class="l-Scalar-Plain">build</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">steps</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">rvm-use</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby-2.1.5</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle-install</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">script</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">configure</span>
</span><span class='line'>        <span class="l-Scalar-Plain">code</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">git config --global user.email &quot;メールアドレス&quot;</span>
</span><span class='line'>          <span class="no">git config --global user.name &quot;ユーザーネーム&quot;</span>
</span><span class='line'>          <span class="no">bundle exec rake setup_github_pages[$GIT_REMOTE]</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">script</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">deploy to github</span>
</span><span class='line'>        <span class="l-Scalar-Plain">code</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">bundle exec rake generate</span>
</span><span class='line'>          <span class="no">bundle exec rake deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>werckerのデベロッパーコンソールで環境変数をセットする。<br/>
HOME / APPS / ユーザー / リポジトリ名</p>

<p>Settings ▶  PIPELINE ▶  Add new variable<br/>
・ Environment variable: GIT_REMOTE<br/>
・ Text: <code>https://GitHubのアプリケーションTOKEN@github.com/ユーザ名/リポジトリ名.git</code><br/>
・ Protectedにチェックを入れる</p>

<p>アプリケーションTOKENはGitHubのSettingのApplicationのセクションで新規作成。</p>

<h3>Rakefileにgit push -fを追加</h3>

<p>Rakefileを変更。</p>

<figure class='code'><figcaption><span>Rakefile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;deploy public directory to github pages&quot;</span>
</span><span class='line'><span class="n">multitask</span> <span class="ss">:push</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Deploying branch to Github Pages &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Pulling any updates from Github Pages &quot;</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git pull&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="p">(</span><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">/*&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">rm_rf</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="ss">:copydot</span><span class="o">].</span><span class="n">invoke</span><span class="p">(</span><span class="n">public_dir</span><span class="p">,</span> <span class="n">deploy_dir</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Copying </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/.&quot;</span><span class="p">,</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add -A&quot;</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Committing: </span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Pushing generated </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2"> website&quot;</span>
</span><span class='line'>    <span class="no">Bundler</span><span class="o">.</span><span class="n">with_clean_env</span> <span class="p">{</span> <span class="nb">system</span> <span class="s2">&quot;git push -f origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Github Pages deploy complete&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>以上で完了です。<br/>
後はいつもどおり<a href="https://bitbucket.org/">Bitbucket</a>にプッシュするだけ。<br/>
<a href="http://n-o-b.up.n.seesaa.net/n-o-b/image/C3A5Cimages5C20080213_01.jpg?d=a0">まったく簡単だ</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JadeでスマホかタブレットかPCかなどを判定する]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2015/01/02/javascript-at-jade/"/>
    <updated>2015-01-02T16:27:11+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2015/01/02/javascript-at-jade</id>
    <content type="html"><![CDATA[<p>Androidアプリの改修をぼちぼちやり始めていますが、ちょっと煮詰まってきたので気分を変えて、先日リリースした<a href="http://www.no-technology-no-life.com/index.html">Webサイト</a>でちょっと詰まったところをメモっておきます。</p>

<p>サイトの中で、ユーザーがスマホかPCかで判定をして高さを調整する、というロジックを実装しました。</p>

<!--more-->


<p><a href="http://bootflat.github.io/">Bootflat</a><a href="http://getbootstrap.com/">(Bootstrap)</a>は、幅の調整は簡単ですが、高さの調整がちょっと見つからなかったので、生JavaScriptでゴリゴリ書いてしまいました。<br/>
もし<a href="http://bootflat.github.io/">Bootflat</a><a href="http://getbootstrap.com/">(Bootstrap)</a>を使ってスマートにやる方法があったら誰か教えて下さい。。</p>

<hr />

<p>で、HTMLのテンプレートは<a href="http://jade-lang.com/">Jade</a>を使っているのですが、Jade内でJavaScriptが書けるので、そこに書いちゃえ、ということで下記サイトを参考に(すみません、まるまるコピペです。。)、最初以下のように実装しました。</p>

<p>参考サイト : <a href="http://qiita.com/Evolutor_web/items/655c6402aece800fd081">JavaScriptでスマホかタブレットかその他かを返す</a></p>

<figure class='code'><figcaption><span>_js/device_info.jade</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='jade'><span class='line'><span class="nt">script</span>.
</span><span class='line'>  <span class="nt">var</span> getDevice = function(){
</span><span class='line'>      <span class="nt">var</span> ua = navigator.userAgent;
</span><span class='line'>      <span class="nt">if</span>(<span class="na">ua</span><span class="err">.</span><span class="na">indexOf</span><span class="err">(&#39;</span><span class="na">iPhone</span><span class="err">&#39;</span>) &gt; 0 || ua.indexOf(&#39;iPod&#39;) &gt; 0 || ua.indexOf(&#39;Android&#39;) &gt; 0 &amp;&amp; ua.indexOf(&#39;Mobile&#39;) &gt; 0){
</span><span class='line'>          <span class="nt">return</span> &#39;sp&#39;;
</span><span class='line'>      <span class="err">}</span><span class="nt">else</span> if(ua.indexOf(&#39;iPad&#39;) &gt; 0 || ua.indexOf(&#39;Android&#39;) &gt; 0){
</span><span class='line'>          <span class="nt">return</span> &#39;tab&#39;;
</span><span class='line'>      <span class="err">}</span><span class="nt">else</span>{
</span><span class='line'>          <span class="nt">return</span> &#39;other&#39;;
</span><span class='line'>      <span class="err">}</span>
</span><span class='line'>  <span class="err">}();</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>index.jade</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='jade'><span class='line'><span class="nt">include</span> _js/device_info
</span><span class='line'>
</span><span class='line'><span class="err">~省略</span>
</span><span class='line'>
</span><span class='line'> <span class="p">-</span> <span class="k">var</span> <span class="n">dh</span> <span class="k">=</span> <span class="o">(</span><span class="n">getDevice</span> <span class="o">==</span> <span class="-Symbol">&#39;sp</span><span class="err">&#39;</span><span class="o">)</span> <span class="o">?</span> <span class="mi">100</span> <span class="k">:</span> <span class="err">230</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'> <span class="nt">h1</span>(<span class="na">style=</span><span class="s">&#39;text-align:center;margin-top:#{dh}px;margin-bottom:#{dh}px;&#39;</span>) Technology with your life.
</span><span class='line'>
</span><span class='line'><span class="err">~省略</span>
</span></code></pre></td></tr></table></div></figure>


<p>やりたいことは、スマホの時はマージンを100pxに、それ以外の時は230pxにするという処理です。<br/>
getDeviceで判定して、マージンをセットするだけ。<br/>
しかし、getDeviceがundefinedになる。</p>

<hr />

<p>これは大きな勘違いだったのですが、JadeでのJavaScriptの書き方は2通りあります。</p>

<figure class='code'><figcaption><span>example.jade</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='jade'><span class='line'><span class="nt">script</span>.
</span><span class='line'>  <span class="nt">JavaScript</span>のコード
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>example.jade</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='jade'><span class='line'><span class="p">-</span> <span class="nc">JavaScript</span><span class="n">のコ</span><span class="err">ー</span><span class="n">ド</span>
</span></code></pre></td></tr></table></div></figure>


<p>前者はJavaScriptコードがHTMLファイルに吐き出される。<br/>
後者はJadeをコンパイルする時にだけ実行され、HTMLファイルには吐き出されない。<br/>
後者はすごく便利なのですが、混在する時は気を付けなければなりません。</p>

<p>結論としては、以下のように実装いたしました。</p>

<figure class='code'><figcaption><span>index.jade</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='jade'><span class='line'><span class="nt">include</span> _js/device_info
</span><span class='line'>
</span><span class='line'><span class="err">~省略</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">script</span>.
</span><span class='line'>    <span class="nt">var</span> dh = 0;
</span><span class='line'>    <span class="nt">if</span>(<span class="na">getDevice =</span><span class="err">=</span> <span class="s">&#39;sp&#39;</span>){
</span><span class='line'>      <span class="nt">dh</span> = 100;
</span><span class='line'>    <span class="err">}</span><span class="nt">else</span>{
</span><span class='line'>      <span class="nt">dh</span> = 230;
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>    <span class="nt">document</span><span class="nc">.write</span>(<span class="err">&#39;&lt;</span><span class="na">h1</span> <span class="na">style=</span><span class="err">\</span><span class="s">&#39;text-align:center;margin-top:&#39;</span> <span class="err">+</span> <span class="na">dh</span> <span class="err">+</span> <span class="err">&#39;</span><span class="na">px</span><span class="err">;</span><span class="na">margin-bottom:</span><span class="err">&#39;</span> <span class="err">+</span> <span class="na">dh</span> <span class="err">+</span> <span class="err">&#39;</span><span class="na">px</span><span class="err">;\&#39;&gt;</span><span class="na">Technology</span> <span class="na">with</span> <span class="na">your</span> <span class="na">life</span><span class="err">.&lt;/</span><span class="na">h1</span><span class="err">&gt;&#39;</span>);
</span><span class='line'>
</span><span class='line'><span class="err">~省略</span>
</span></code></pre></td></tr></table></div></figure>


<p>document.writeで書き出すあたりがイケてないですが、やむを得ませんでした。<br/>
以上です！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年 目標]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2015/01/01/decide-the-goal/"/>
    <updated>2015-01-01T16:43:44+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2015/01/01/decide-the-goal</id>
    <content type="html"><![CDATA[<p>筆不精だったはずが、ブログを<a href="http://octopress.org/">Octopress</a>にしてからその手軽さからついつい筆が進んでしまいます。</p>

<p>さて、１年の計は元旦にあり、ということで、月並みではありますが、昨年の振り返りと今年の目標を書きたいと思います。<br/>
誰にも見られていないとは思いますが、目標をブログに書く、というのは非常に勇気が必要ですね。</p>

<!--more-->


<p>なぜブログに書くのかというと、それは自分の中だけで完結して甘えて実行が中途半端になってしまうより、あえて公開することで、目標を達成しなければならないというプレッシャーを自分にかける、という意味を込めて書きます。<br/>
仕事では会社のメンバーがプレッシャーをかけてくれますが、プライベートは誰もかけてくれないですからね。<br/>
そういった使い方にブログを利用する、というのはけっこう有用な気がします。</p>

<p>でも、ブログで公開して自分にプレッシャーをかけるほどの目標に見えませんよ、と突っ込まれそうですが(笑)<br/>
まーそれよりも、このブログが続くのか？という(笑)<br/>
今はなぜか頻繁に更新していますが、いつ筆不精になったり、突然不幸が襲ったり、何があるか分からない世の中ですから。。</p>

<hr />

<h2>昨年を振り返って</h2>

<h4>就職した</h4>

<p>Webサービスやスマートフォンアプリを開発する会社に就職しました。<br/>
スキルがぜんぜん足りていないので頑張らないといけませんが、のびのびと自分のやりたいことに集中させてくれる会社なので、良い就職先が見つかったと非常に満足しております。</p>

<h4>スマートフォンアプリをリリースした</h4>

<p>現在合計7つのアプリをGoogle Playで公開していますが、うち２つはカテゴリランキングの上位に入ることが出来ておりますので、開発者として嬉しいかぎりです。<br/>
まだまだ改善しなければならない点がたくさんあると思っておりますので引き続き努力していきます。<br/>
社会の役に立てるようなアプリやWebサービスを、もっと世の中にリリースしていきたいと思っています。</p>

<h4>総括</h4>

<p>自分ではよく出来た1年だと思いましたが、就職したことによってプライベートでのアプリ開発は少し疎かになってしまいました。<br/>
また、年末に色々な目的を兼ねて海外に行こうと思っておりましたが、海外に行ったことが無いのでパスポートの取得に手間取り、結局間に合わずに行くことが出来なかった、ということが一番の心残りです。</p>

<hr />

<h2>今年の目標</h2>

<h4>仕事上でのスキルアップ目標</h4>

<ul>
<li>Railsの勉強</li>
<li>サーバー周りのインフラ勉強</li>
<li>フロントサイドも少し勉強</li>
</ul>


<p>昨年に引き続き、スキルを高めていきたいと思います。<br/>
特に、サーバー周りやネットワーク、AWSなどのインフラ系を勉強して、<a href="https://www.chef.io/chef/">Chef</a>を使った環境構築、<a href="http://capistranorb.com/">Capistrano</a>による自動デプロイまでトータルにこなせる開発者になりたい。</p>

<h4>スマートフォンアプリ作成</h4>

<ul>
<li>WebAPIと連携したスマートフォンアプリの作成</li>
<li>その他ツール系のアプリ作成</li>
<li>既存アプリの改修・改善に取り組んでいく</li>
</ul>


<p>色々作りたい新しいアプリのアイデアもありますが、どれから作るか、どうやって作っていくかはまだ構想中です。<br/>
サーバー側はRails、アプリ側はAndroidで、といったサーバー連携を取り入れたアプリも作りたいと思っています。<br/>
また、日本だけでなく、もっと海外にも目を向けていきたいと思っています。</p>

<h4>サイトを改善</h4>

<p>プロダクト紹介サイトをバージョンアップしていく。<br/>
アプリの詳細画面作成や多言語対応など。</p>

<h4>英語を勉強する</h4>

<p>英語がなぜ必要なのかは言わずもがなですね。<br/>
もはやビジネスマンにとって当たり前のことですが、読み書き、会話などをスキルアップしたいと思っています。<br/>
英語のスキル書を読むこと、また<a href="http://stackoverflow.com/">Stack Overflow</a>などで、積極的にアウトプットの練習も積んでいきたいと思っています。<br/>
<a href="http://stackoverflow.com/">Stack Overflow</a>は最近<a href="http://ja.stackoverflow.com/">日本語バージョン</a>もリリースされたようですが、なるべく英語のほうで頑張りたいと思います。<br/>
スピーキングの目標は、海外旅行の時などの簡単な日常会話で十分意思疎通できる程度を目指します。</p>

<h4>海外に行く</h4>

<p>恥ずかしながら、今まで海外に行ったことはありません。<br/>
色々検討した結果、初海外はフィリピンのセブ島に行こうと思っています。</p>

<p>なぜセブ島なのか？<br/>
色々目的がありますが、ざっと以下のメリットを考えています。</p>

<ul>
<li>英語が通じるらしいので、英語の勉強になる。</li>
<li>気候が暖かく、海がキレイ。気分がリフレッシュできる。</li>
<li>フィリピン(特にマニラ)は治安が良くないそうだが、セブ島は比較的治安が良さそうである。</li>
<li>物価が安い。宿代は一泊2000円そこそこでコマシな宿がある。
日本では2000円だとドミトリー程度しかない。</li>
<li>航空運賃が安い。往復で5万円ほど。運賃だけ見ると沖縄などの往復便と変わらない。
また、私の住まいは名古屋なのですが、名古屋から直行便が出るようになったので、アクセスも良い。</li>
<li>ITの発展が目覚ましく、ネット環境などの整備が整っている模様。</li>
<li>発展途上国に行きたい。 特にITなどが発展途上の国ではアプリ作りなどのチャンスも多いのではと思っています。</li>
</ul>


<p>こう考えると、物価の安い途上国への海外旅行は、観光だけの日本国内旅行よりよっぽどメリットが高そうですね。<br/>
セブ島以外では、やはりアジアの発展途上国に行きたいと思っております。</p>

<hr />

<p>以上ですが、割りと簡単そうな目標ですかね。<br/>
1年後、このブログが続いていることを願って(笑)、振り返って目標達成できたかを確認するのを楽しみにしたいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy static Web Site]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2014/12/31/website/"/>
    <updated>2014-12-31T10:15:48+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2014/12/31/website</id>
    <content type="html"><![CDATA[<p>WebSiteを作りました。<br/>
<a href="http://no-technology-no-life.com/">no-technology-no-life.com</a></p>

<p>主にスマートフォンアプリケーションの紹介ページです。<br/>
とりあわずガワだけなので、今後改善していきます、気が向いた時に。<br/>
色々迷いましたが、HTML、CSS、JavaScriptだけの静的なページとしました。</p>

<!--more-->


<h3>構成</h3>

<ul>
<li>ベースデザイン・・・<a href="http://bootflat.github.io/index.html">Bootflat</a></li>
<li>管理ツール・・・<a href="http://gulpjs.com/">gulp</a></li>
<li>HTMLテンプレート・・・<a href="http://jade-lang.com/">Jade</a></li>
<li>CSSテンプレート・・・<a href="http://sass-lang.com/">SCSS</a></li>
<li>JavaScriptテンプレート・・・<a href="http://coffeescript.org/">CoffeeScript</a></li>
<li>デプロイ先・・・<a href="https://www.heroku.com/">Heroku</a></li>
<li>ドメイン・・・<a href="http://muumuu-domain.com/">ムームードメイン</a> ※ <a href="http://aws.amazon.com/jp/">AWS</a>のRoute53でドメイン管理</li>
</ul>


<h4>Gulp</h4>

<p>今回<a href="http://gulpjs.com/">gulp</a>を勉強して使ってみましたが、素晴らしいですね。<br/>
<a href="http://gruntjs.com/">Grunt</a>のほうは使ったことが無いので分からないですが、タスクの登録などが分かりやすいと思いました。</p>

<p>お世話になったサイト</p>

<ul>
<li><a href="http://dotinstall.com/lessons/basic_gulp">ドットインストール gulp入門(全12回)</a></li>
<li><a href="http://whiskers.nukos.kitchen/2014/12/01/gulp.html">whiskers これから始めるGulp</a></li>
<li><a href="http://dev.classmethod.jp/client-side/javascript/gulp-js-task-files/">Gulp.js タスク単位のファイル分割</a></li>
</ul>


<h4>Jade</h4>

<p><a href="http://jade-lang.com/">Jade</a>、いいですね。<br/>
テンプレートを使いまわせるので、すごくキレイに書けると思います。<br/>
メンテナンスが捗りそうです。<br/>
for文やcase文も書けるし、JavaScriptファイルが要らないですねぇ。<br/>
<a href="http://bootflat.github.io/index.html">Bootflat</a>のテンプレートを、使いたいところだけ変換しながらコード実装。</p>

<p>お世話になったサイト</p>

<ul>
<li><a href="https://gist.github.com/japboy/5402844">Jade FTW</a></li>
<li><a href="http://qiita.com/gonshi_com/items/5a23bc9c8e44a0552969">Jade内で書かれるJavascriptは、htmlに出力されないので便利</a></li>
<li><a href="http://naltatis.github.io/jade-syntax-docs/">Jade Syntax Documentation</a></li>
</ul>


<h4>Heroku, Route53</h4>

<p>デプロイ先は<a href="https://www.heroku.com/">Heroku</a>にしました。<br/>
Regionがアメリカなので、やはりちょっとレイテンシがかかっているような気がします。<br/>
Herokuを使うのが初めてだったので知らなかったのですが、独自ドメインの設定が難しいとのこと。<br/>
固定IPが取得出来ないためらしい。<br/>
Heroku内を探したら、アドオンでIPアドレスが取得出来そうだったけど、有料だったのでそれはちょっとな〜、て感じ。<br/>
<a href="http://aws.amazon.com/jp/">AWS</a>のS3にしようかとも思いましたが、良いサイトが見つかったので、まったくその通りにやったら出来ました。<br/>
本当に感謝です&lt;(_ _)></p>

<ul>
<li><a href="http://kayakuguri.github.io/blog/2014/07/07/heroku-set-domain/">Herokuで独自ドメインをRoute53で設定する</a></li>
</ul>


<p>また、Herokuにデプロイしたアプリケーションは、Apacheなどのサーバーソフト上で動いているので、index.phpなどを置いてやらなければならない。<br/>
Herokuのデベロッパーコンソールでアプリケーションの種類を設定できるが、index.phpを一緒に上げてやれば、自動的にPHPアプリケーションとして設定されるようです。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/softsama/20120715/1342373494">herokuにただのWebページを乗せてみる</a></li>
</ul>


<p>以下のPHPファイルをカレントディレクトリに置いて、index.htmlにリダイレクトした。</p>

<figure class='code'><figcaption><span>index.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="nb">header</span><span class="p">(</span><span class="s1">&#39;location: index.html&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">exit</span><span class="p">();</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>AWSでもリダイレクトしてるし、なんかリダイレクトだらけなので微妙ですかね(笑)。<br/>
urlの後ろに/index.htmlを付けてアクセスしてもらってもいいですが、せっかくなので無しでもアクセス出来たほうがいいかなと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[カフェにて]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2014/12/25/life/"/>
    <updated>2014-12-25T09:29:07+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2014/12/25/life</id>
    <content type="html"><![CDATA[<p>昨日カフェで作業をしていましたら隣で、大学を卒業して1〜2年と思われる若い青年と、30代後半から40代前半ぐらいと思われる面接官で、アルバイトの面接をしていました。<br/>
すぐ隣だったので、いやでも聞こえてきたのですが、青年は何やら東京の某有名大学卒業生で、面接先の会社のほうはどこかのホテル会社のようです。</p>

<!--more-->


<p>青年が色々面接官の質問に答えていましたが、どうも何をしたいのか、目的はあるのか、などが伝わってこない。<br/>
そもそもその面接先の会社で働きたいのか、なども伝わってこない。<br/>
そういうことを感じているだろうなという面接官の気持ちが、隣で聞いている私にも伝わってくるほどでした。</p>

<p>「突然来なくなったりはしません。辞める時はしっかり連絡します。」と青年がアピールしていたり、突っ込みどころが満載で吹き出しそうになりました。</p>

<p>少し面白かったですが、何か色々残念でもったいない気持ちでいっぱいになってきました。<br/>
申し訳ありませんが、ある程度明確な目的や意思がお互いに無いと、就職してから双方とも幸せになれないだろうな、と思いました。</p>

<p>こういう光景を目にすると、本当に日本の教育は間違っているな、とひしひしと感じざるを得ません。<br/>
教育を抜本的に変えて欲しいと本当に思います。<br/>
まず現在の、大学に合格するためだけにする教育は完全に間違っていると思います。<br/>
目標の設定方法がそもそもおかしい。</p>

<p>私が考える教育はこうです。<br/>
まず基礎教育として社会や仕事がどうやって出来ているかや仕組みを学び、社会で生きていくということを強烈に意識させ、おぼろげながらでも自分で目標を持たせることを促す。<br/>
なるべく早い段階で、できれば小学生の時から。<br/>
目標が決まり次第、そのために必要な教育を選択させる。<br/>
重要なのは選択権を持たせるということで、与えられてやるのと自分から進んでやるのとでは、吸収率が格段に違う、ということが言えると思うからです。<br/>
そういったきっかけを与えてあげる、手助けをする、ということが教育ではないでしょうか。</p>

<p>最後に面接官が弊社で働きたいという気持ちはあるか？という質問をしていましたが(これもおかしな質問ですねw)、あります、働きたいと思っています、と答えた青年に対して、本当に？と面接官が念押ししていて、また吹き出してしまいそうになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Androidスマートフォン アプリ超事典1000[2015年版]]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2014/12/24/book-publication/"/>
    <updated>2014-12-24T06:47:37+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2014/12/24/book-publication</id>
    <content type="html"><![CDATA[<p>昨日、本屋さんをぶらぶらしていたら、アンドロイダーさんから出版されたAndroidアプリの紹介本を見つけました。</p>

<!--more-->


<p><a href="http://www.amazon.co.jp/dp/4844337122/"><img src="http://ecx.images-amazon.com/images/I/81PKfap4auL.jpg" width="300" title="left_image" alt="android_book" /></a></p>

<h2>できるポケット Androidスマートフォン アプリ超事典1000[2015年版]スマートフォン&amp;タブレット対応</h2>

<p><a href="https://androider.jp/">アンドロイダー(著)</a><br/>
単行本(ソフトカバー) ¥1,490-<br/>
Kindle版 ¥980-</p>

<p><img src="" title="clear_both" alt="" /></p>

<p>少し前にアンドロイダーさんから本に掲載します、と連絡を頂いておりましたので中身を見てみると、しっかりと私のアプリの紹介もしてくださっていました。<br/>
1ページの8分の1ぐらいのでスペースなので、決して大きくはありませんが、本に掲載されるというのは非常に嬉しいものですね。</p>

<p>紹介してくださったのはこのアプリです。</p>

<p><a href="https://play.google.com/store/apps/details?id=com.timer.intervaltimer.plus&amp;hl=ja"><img src="http://http://blog.no-technology-no-life.com/images/book_publication/intervaltimer.png" width="300" title="left_image" alt="interval_timer" /></a></p>

<h2>インターバルタイマー+ HIITトレーニング＆レコード</h2>

<p>インターバルタイマーを最大20個まで設定し、好きな順番で連続実行できるタイマーアプリ。</p>

<p><img src="" title="clear_both" alt="" /></p>

<p>全然改修できていなくて申し訳ないですが、<a href="http://ja.wikipedia.org/wiki/%E8%A5%BF%E5%B7%9D%E3%81%8D%E3%82%88%E3%81%97">小さなことからこつこつと</a>、の精神でやっていきたいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[お引っ越し]]></title>
    <link href="http://http://blog.no-technology-no-life.com/blog/2014/12/21/first-post/"/>
    <updated>2014-12-21T07:51:08+00:00</updated>
    <id>http://http://blog.no-technology-no-life.com/blog/2014/12/21/first-post</id>
    <content type="html"><![CDATA[<p>昨年からロリポップさんを使わせて頂いておりましたが、１年経過しましたので更新してくださいとお知らせが来ました。<br/>
めんどくさがりな性格で、文章を書くのが得意ではないのでブログの更新は全くしておりませんでした。<br/>
もったいないので無料の<a href="https://pages.github.com/">GitHub Pages</a>に引っ越しすることにします。<br/>
会社内のブログも<a href="http://octopress.org/">Octopress</a>ですし、自分で使ってみるのも勉強になりますしね。</p>

<!--more-->


<p>ロリポップで書いたデータは一応ダウンロードしましたが、覗いてみるとHTMLタグとか入っていてめんどくさい感じ(笑)。<br/>
たいしたことは書いていなかったのでお蔵入りかな。</p>

<p>ドメインはムームードメインのまま、ロリポップだけ解約。</p>

<p>下記のソースを参考にさせて頂きました。</p>

<ul>
<li><a href="http://blog.shiroyama.us/blog/2014/02/26/octopress/">エンジニアのブログは Octopress が最適</a></li>
<li><a href="http://hamasyou.com/blog/2014/03/05/github-pages-custom-domain/">ムームードメイン+GitHub Pagesで独自ドメインを使う方法</a></li>
<li><a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/">OctopressでGitHub無料ブログ構築。sourceをBitbucket管理。簡単ガイド！</a></li>
</ul>


<p>来年はRailsでAPI作って、スマートフォンアプリと連携したアプリを作っていきたいなと思っています。</p>

<p>このサイトもアプリを紹介をするサイトにしていきたい。<br/>
Bootflatテーマで静的なサイトにして、gulpで管理してみようと思います。<br/>
Jadeも使って極力少ないコードで済ませたいですね。<br/>
サーバーは<a href="https://www.heroku.com/">Heroku</a>だと無料で出来るかなぁ。</p>
]]></content>
  </entry>
  
</feed>
